东方： 603014945841

v8 libuv


make android PRJ= APPID=5000 DEBUG=0


global.gameInfo.status = 1

lua代码打包
make luac_a zip_name=QuizInfo
make luac_player zip_name=QuizInfo

javac中文乱码
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF-8


git 
获取远程分支到本地
git checkout -b local-branchname origin/remote-branchname

IW8rCsjq5WMgYbJI


pz@ss2468


Qaz123wsx
 

软件安装

brew
curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1

git 
https://git-scm.com/download/mac



brew install报错
error: could not lock config file .git/config: Permission denied
sudo chgrp -R admin /usr/local
sudo chmod -R g+w /usr/local


1: Linux升级安装GCC
https://itbilu.com/linux/management/V1vdnt9ll.html
下载资源，解压
下载gcc依赖文件和库
配置安装gcc
验证安装

gcc新版本的动态库替换系统中老版本的动态库
https://itbilu.com/linux/management/NymXRUieg.html

node-gyp rebuild


2: pm2启动node进程
pm2 start main.js --name "name"

3: Node.js项目的依赖管理 
https://cnodejs.org/topic/52dcc0a578990b04112e2f09


4: Node.js perf  火焰图
http://www.jianshu.com/p/c62dac29c8d4
//高并发性能调试经验分享
https://zhuanlan.zhihu.com/p/21348220
因为设计导致的 bug 用日志是一种比较通用的调试方法，IO 慢的问题可以把日志写入到一个 mmap 打开的文件中（mmap 不支持调整文件大小，需要预先分配好空间），如果进程崩溃了系统会自动把 mmap 后的内存写入到文件里，不会丢失。

5: openresty kafka
http://hot66hot.iteye.com/blog/2291916


/data/project/t_proxy/rel/t_proxy/bin/t_proxy start
/data/project/t_proxy/rel/t_proxy/bin/t_proxy stop


root     10212  9854  0 17:51 pts/11   00:00:00 grep --color=auto t_proxy
root     14118     1  0 Jan01 ?        00:00:31 /data/project/t_proxy/rel/t_proxy/erts-5.10.3/bin/epmd -daemon
root     14125     1  0 Jan01 ?        00:00:01 /data/project/t_proxy/rel/t_proxy/erts-5.10.3/bin/run_erl -daemon /tmp//data/project/t_proxy/rel/t_proxy/ /data/project/t_proxy/rel/t_proxy/log exec /data/project/t_proxy/rel/t_proxy/bin/t_proxy console \'\'
root     14126 14125  3 Jan01 pts/5    1-10:51:53 /data/project/t_proxy/rel/t_proxy/erts-5.10.3/bin/beam.smp -- -root /data/project/t_proxy/rel/t_proxy -progname t_proxy -- -home /root -- -boot /data/project/t_proxy/rel/t_proxy/releases/1/t_proxy -mode embedded -config /data/project/t_proxy/rel/t_proxy/releases/1/sys.config -name t_proxy@127.0.0.1 -setcookie t_proxy -- console ''



4:  安装eslint插件
npm install eslint-config-airbnb eslint@^3.15.0 eslint-plugin-jsx-a11y@^3.0.2 eslint-plugin-import@^2.2.0 eslint-plugin-react@^6.9.0 -g



AI 实在是太弱了，而现在大厂里面也仅仅是在做玩具而已，小冰小娜小什么什么的，然而在一些小的方面人工智能确实取得了可喜的进步，广告搜索推荐这三种系统还有图像识别和语音识别已经取得了相当大的进展，然而最后的语义理解确实不能做到，而且在现有方法论下不存在突破的可能。一种技术有没有价值最终要看有多少市场，语音转文字，车载语音操作，智能家居语音操作，英语口语陪练，车牌识别，有道词典用照相机查单词这些简单的AI确实已经实现，并且拥有很大的市场，而各大互联网公司的推荐系统和反作弊系统也在不断增强自身能力，实现更多价值，这些也都算是AI的一些用处。发现生活中的不便并且用ai进行优化然后作为某种产品的附属功能提高原产品竞争力是将来 AI 的一种可行通道。比如给洗衣机电饭煲增加声控的功能，增强汽车飞机巡航的智能程度和安全预警能力，增强安保系统的判断能力，在各个方面减弱人类工作的强度而非消灭人类的工作，以一种渐进的姿态改变人类生活。

作者：匿名用户
链接：https://www.zhihu.com/question/57935491/answer/155180515
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。








update jinhua.jinhua_tables set min_coins=1000, chips=200, service_charge=300, cent=0.2, max_bet=4000, bet_coins1=400, bet_coins2=600, bet_coins3=800, bet_coins4=1000, xuepin_coins=2000, xuepin_yhcoins=1 where ttype = 1 and tlevel = 1 and tid > 0;
update jinhua.jinhua_tables set min_coins=20000, chips=400, service_charge=800, cent=0.6, max_bet=8000, bet_coins1=800, bet_coins2=1200, bet_coins3=1600, bet_coins4=2000, xuepin_coins=4000, xuepin_yhcoins=1 where ttype = 1 and tlevel = 2 and tid > 0;
update jinhua.jinhua_tables set min_coins=80000, chips=800, service_charge=2000, cent=2, max_bet=16000, bet_coins1=1600, bet_coins2=2400, bet_coins3=3200, bet_coins4=4000, xuepin_coins=8000, xuepin_yhcoins=1 where ttype = 1 and tlevel = 3 and tid > 0;
update jinhua.jinhua_tables set min_coins=200000, chips=2000, service_charge=5000, cent=5, max_bet=40000, bet_coins1=4000, bet_coins2=6000, bet_coins3=8000, bet_coins4=10000, xuepin_coins=20000, xuepin_yhcoins=1 where ttype = 1 and tlevel = 4 and tid > 0;
update jinhua.jinhua_tables set min_coins=1000, chips=300, service_charge=400, cent=0.2, max_bet=6000, bet_coins1=600, bet_coins2=900, bet_coins3=1200, bet_coins4=1500, xuepin_coins=3000, xuepin_yhcoins=1 where ttype = 2 and tlevel = 1 and tid > 0;
update jinhua.jinhua_tables set min_coins=10000, chips=600, service_charge=1500, cent=1.2, max_bet=12000, bet_coins1=1200, bet_coins2=1800, bet_coins3=2400, bet_coins4=3000, xuepin_coins=6000, xuepin_yhcoins=1 where ttype = 2 and tlevel = 2 and tid > 0;
update jinhua.jinhua_tables set min_coins=80000, chips=1000, service_charge=3000, cent=3, max_bet=20000, bet_coins1=2000, bet_coins2=3000, bet_coins3=4000, bet_coins4=5000, xuepin_coins=10000, xuepin_yhcoins=1 where ttype = 2 and tlevel = 3 and tid > 0;
update jinhua.jinhua_tables set min_coins=200000, chips=3000, service_charge=6000, cent=6, max_bet=60000, bet_coins1=6000, bet_coins2=9000, bet_coins3=12000, bet_coins4=15000, xuepin_coins=30000, xuepin_yhcoins=1 where ttype = 2 and tlevel = 4 and tid > 0;



